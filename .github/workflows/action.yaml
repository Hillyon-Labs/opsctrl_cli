name: Build & Package Opsctrl CLI

on:
  workflow_dispatch:          # ← enables “Run workflow” button
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            node-version: "20.x"
            target: linux-x64-20.14.0
            output: opsctrl-linux-x64
          - os: macos-latest
            node-version: "20.x"
            target: macos-arm64-20.14.0
            output: opsctrl-macos-arm64
          - os: windows-latest
            node-version: "20.x"
            target: windows-x64-20.14.0
            output: opsctrl-windows-x64.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Cache nexe binaries
        uses: actions/cache@v3
        with:
          path: ~/.cache/nexe
          key: nexe-cache-${{ matrix.target }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: nexe-cache-${{ matrix.target }}-

      - name: Install dependencies
        run: npm ci

      - name: Bundle with ncc
        run: npx @vercel/ncc build src/index.ts -o dist

      - name: Build native binary
        env:
          NEXE_CACHE_DIR: ~/.cache/nexe
        run: |
          mkdir -p release_dist
          npx nexe dist/index.js \
            --target ${{ matrix.target }} \
            --output release_dist/${{ matrix.output }} \
            --build

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output }}
          path: release_dist/${{ matrix.output }}
          retention-days: 7

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: release_dist

      - name: Create GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: release_dist/*

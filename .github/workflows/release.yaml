name: Build & Package Opsctrl CLI

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to attach this release to (must already exist)'
        required: true
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            node-version: '20.14.0'
            target: linux-x64-20.14.0
            output: opsctrl-linux-x64
            tag_suffix: linux-x64
          - os: macos-latest
            node-version: '20.14.0'
            target: macos-arm64-20.14.0
            output: opsctrl-macos-arm64
            tag_suffix: macos-arm64

    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: .

      - name: ⚙️ Validate Tag Exists (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $tag = "${{ github.event.inputs.tag }}"
          $exists = git tag -l $tag | Select-String $tag
          if (-not $exists) {
            Write-Host "❌ Tag $tag does not exist!"
            exit 1
          }

      - name: ⚙️ Validate Tag Exists (Unix)
        if: runner.os != 'Windows'
        run: |
          if ! git rev-parse "refs/tags/${{ github.event.inputs.tag }}" >/dev/null 2>&1; then
            echo "❌ Tag ${{ github.event.inputs.tag }} does not exist!"
            exit 1
          fi

      - name: 🧰 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: 💾 Cache Nexe
        uses: actions/cache@v3
        with:
          path: ~/.cache/nexe
          key: nexe-${{ matrix.target }}-${{ hashFiles('package-lock.json') }}
          restore-keys: nexe-${{ matrix.target }}-

      - name: 📥 Install Dependencies
        run: npm ci

      - name: Install tsx
        run: npm install -g tsx

      - name: ⚡ Build native CLI for host OS
        run: |
          npm run clean
          TARGET=${{ matrix.target }} TAG_SUFFIX=${{ matrix.tag_suffix }} npm run release
        env:
          OPSCTRL_API_URL: ${{ vars.OPSCTRL_API_URL }}

      - name: 🧳 Upload Zipped Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: opsctrl-${{ matrix.tag_suffix }}
          path: release_dist/opsctrl-${{ matrix.tag_suffix }}.zip
          retention-days: 7

  release:
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.tag }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download All Zipped Binaries
        uses: actions/download-artifact@v4
        with:
          path: release_dist

      - name: 🚀 Create GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          prerelease: true

      - name: 📦 Upload Zipped Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: release_dist/**/*.zip
